/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sand.client.gui;

import java.awt.event.*;
import javax.swing.JFrame;

import common.network.*;
import sand.client.SandClientManager;

public class SandClientGUI extends javax.swing.JFrame {
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel Title;
	private javax.swing.JButton createButton;
	private javax.swing.JButton loginButton;
	private javax.swing.JButton offlineButton;
	// End of variables declaration//GEN-END:variables

	private SandClientManager manager;
	static String popUpTitle = "S.A.N.D.";

	/**
	 * Creates new form SandClientUpdatedGUI
	 */
	public SandClientGUI(String host, String portStr) {
		int port = SslDefaults.DEFAULT_SAND_PORT;
		try {
			port = Integer.parseInt(portStr);
		} catch (NumberFormatException e) {
			System.out.println("Using port " + SslDefaults.DEFAULT_SAND_PORT + ".");
			port = SslDefaults.DEFAULT_SAND_PORT;
		}

		manager = new SandClientManager(host, port);
		initComponents();
		checkOnlineStatus();
	}
	public SandClientGUI(String host) {
		this(host, Integer.toString(SslDefaults.DEFAULT_SAND_PORT));
	}
	public SandClientGUI() {
		this(SslDefaults.DEFAULT_HOST, Integer.toString(SslDefaults.DEFAULT_SAND_PORT));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		Title = new javax.swing.JLabel();
		createButton = new javax.swing.JButton();
		loginButton = new javax.swing.JButton();
		offlineButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent e) {
				try {
					manager.shutdown();
				} catch (InterruptedException ignore) { }
			}
		});
		setTitle("S.A.N.D.");

		Title.setFont(new java.awt.Font("Noto Sans", 0, 18)); // NOI18N
		Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		Title.setText("S.A.N.D. Password Manager ");

		createButton.setText("Create Account");
		createButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				createButtonActionPerformed(evt);
			}
		});

		loginButton.setText("Login");
		loginButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				loginButtonActionPerformed(evt);
			}
		});

		offlineButton.setText("Offline Mode");
		offlineButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				offlineButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(layout.createSequentialGroup()
						.addGap(79, 79, 79)
						.addComponent(Title))
					.addGroup(layout.createSequentialGroup()
						.addGap(125, 125, 125)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
							.addComponent(createButton, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
							.addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
							.addComponent(offlineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
				.addContainerGap(80, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(layout.createSequentialGroup()
				.addContainerGap()
				.addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
				.addComponent(createButton)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addComponent(loginButton)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addComponent(offlineButton)
				.addContainerGap(20, Short.MAX_VALUE))
		);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void offlineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offlineButtonActionPerformed
		LoginGUI frame = new LoginGUI(manager, this, true);
		frame.setTitle("S.A.N.D.");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
		this.setVisible(false);
	}//GEN-LAST:event_offlineButtonActionPerformed

	private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
		AccountCreateGUI frame = new AccountCreateGUI(manager,this);
		frame.setTitle("S.A.N.D.");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
	}//GEN-LAST:event_createButtonActionPerformed

	private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
		LoginGUI frame = new LoginGUI(manager, this, false);
		frame.setTitle("S.A.N.D.");
		frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		frame.pack();
		frame.setVisible(true);
		this.setVisible(false);
	}//GEN-LAST:event_loginButtonActionPerformed

	public void checkOnlineStatus() {
		if(!manager.isConnectedToServer()) {
			createButton.setEnabled(false);
			loginButton.setEnabled(false);
		}
	}

	public static void main(final String args[]) {
		if (!checkArgs(args))
			System.exit(0);

		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SandClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SandClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SandClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SandClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				SandClientGUI gui = new SandClientGUI(args[0],
						(args.length == 1 ? Integer.toString(SslDefaults.DEFAULT_SAND_PORT)
							: args[1]));
				gui.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				gui.setVisible(true);
			}
		});
	}

	private static boolean checkArgs(final String[] args) {
		if (args.length == 0) {
			System.out.println(" Usage: java sand.client.gui.SandClientGUI <host> [<port>]");
			return false;
		}

		return true;
	}
}
